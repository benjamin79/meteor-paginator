countPeopleVar = new ReactiveVar(0);

Paginator = (function() {
  function Paginator(collection) {
    var currentPageVar;
    if (!(collection != null ? collection.find : void 0)) {
      throw new Error('Paginator only accepts collections with a `find` method, at the moment');
    }
    currentPageVar = new ReactiveVar(0);
    this.reset = function() {
      return currentPageVar.set(0);
    };
    this.find = function(query, options) {
      var currentPage, cursor, itemsPerPage;
      if (query == null) {
        query = {};
      }
      if (options == null) {
        options = {};
      }
      if (options.limit || options.skip) {
        console.warn('`limit` and `skip` ignored due to pagination');
      }
      currentPage = function() {
        return currentPageVar.get();
      };
      itemsPerPage = options.itemsPerPage || 10;
      options.limit = itemsPerPage;
      options.skip = currentPage() * itemsPerPage;
      cursor = collection.find(query, options);
      cursor.currentPage = currentPage;

      cursor.count = function() {
		  var count = collection.find(query).count();
		  Session.set('countPeopleVar',count)
        return count
      };
      cursor.totalPages = function() {
        return Math.ceil( cursor.count() / itemsPerPage);
      };
	  
      cursor.goToPage = function(pageNumber) {
        if (pageNumber >= 0 && pageNumber < cursor.totalPages()) {
          return currentPageVar.set(pageNumber);
        }
      };
      return cursor;
    };
  }

  return Paginator;

})();

if (Meteor.isClient) {
  Template.Paginator_UI.helpers({
    currentPagei18n: function() {
      return this.currentPage() + 1;
    },
    showUI: function() {
      return this.totalPages() > 1;
    },
    isCurrentPageFirst: function() {
      return this.currentPage() === 0;
    },
    isCurrentPageLast: function() {
      return this.currentPage() === this.totalPages() - 1;
    }
  });
  Template.Paginator_UI.events({
    'click .paginator-prev': function() {
      return this.goToPage(this.currentPage() - 1);
    },
    'click .paginator-next': function() {
      return this.goToPage(this.currentPage() + 1);
    }
  });
}

// ---
// generated by coffee-script 1.9.2